{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"Copia de C1W3: ProteinGAN (Optional)","provenance":[{"file_id":"https://github.com/https-deeplearning-ai/GANs-Public/blob/master/ProteinGAN.ipynb","timestamp":1641317925292}],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"markdown","metadata":{"id":"ViSpF4I70O4b"},"source":["# ProteinGAN: Generative Adversarial Network for Functional Protein Generation\n","*Please note that this is an optional notebook that is meant to introduce more advanced concepts, if you're up for a challenge. So, don't worry if you don't completely follow every step! We provide external resources for extra base knowledge required to grasp some components of the advanced material.*\n","\n","[ProteinGAN](https://www.biorxiv.org/content/10.1101/789719v2) was developed by [Biomatters Designs](https://www.biomatterdesigns.com/) and [Zelezniak lab at Chalmers University of Technology](https://twitter.com/AZelezniak).\n","\n","## Goal\n","The goal of this notebook is to demonstrate that core GAN ideas can be applied outside of the image domain. In this notebook, you will be able to play around with a pre-trained ProteinGAN model to see how it can be used in bioinformatics to generate functional molecules.\n"]},{"cell_type":"markdown","metadata":{"id":"q04P9icA8xIK"},"source":["## Background\n","\n","\n","### Proteins\n","\n","Proteins are large, complex molecules that play many critical roles in living organisms, including humans. You can think of them as very tiny, programmable robots used by nature to perform various functions, e.g. building, modifying or breaking down other molecules, aiding in cell replication and division, and transporting other proteins inside of cells. Apart from the crucial cellular functions, proteins are used virtually everywhere in our daily life, starting from animal nutrition and washing powders down to costly drugs and therapeutic antibodies. Using synthetic biology, protein engineering, adaptive evolutions experimental techniques, researchers enhance proteins' properties, making them more active or \"sticky\" towards a particular drug target or resistant to harsh environemental conditions. However, it is challenging to randomly modify proteins in a \"biochemically meaningful\" way such that protein would remain functional leading in a very costly time-consuming experiments. Thus generating natural-like diverse proteins that remain functional is of outstanding importance for biotechnology and biomedical applications. \n"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":621},"id":"6BRDjqgjZgkg","outputId":"61acf0ad-b625-4416-f676-24e934defa4b","executionInfo":{"status":"ok","timestamp":1641318023981,"user_tz":300,"elapsed":19,"user":{"displayName":"Jose Jhon Fredy Gonzalez Veloza","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06629063487883524661"}}},"source":["from IPython.display import YouTubeVideo\n","YouTubeVideo('wJyUtbn0O5Y', start=75, end=80, autoplay=1, controls=0, loop=1, width=800, height=600)"],"execution_count":1,"outputs":[{"output_type":"execute_result","data":{"text/html":["\n","        <iframe\n","            width=\"800\"\n","            height=\"600\"\n","            src=\"https://www.youtube.com/embed/wJyUtbn0O5Y?start=75&end=80&autoplay=1&controls=0&loop=1\"\n","            frameborder=\"0\"\n","            allowfullscreen\n","        ></iframe>\n","        "],"text/plain":["<IPython.lib.display.YouTubeVideo at 0x7f59d8677cd0>"],"image/jpeg":"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\n"},"metadata":{},"execution_count":1}]},{"cell_type":"markdown","metadata":{"id":"rLPKgWGCZdL7"},"source":["*Above, animation of motor protein responsible for transporting objects in cells*\n","\n","Source: https://www.youtube.com/watch?v=wJyUtbn0O5Y"]},{"cell_type":"markdown","metadata":{"id":"l2PDRSD4kDTR"},"source":["\n","Proteins, like images, can be represented in various ways on the computer. Images are represented as integers from 0 to 256 that indicate the intensity of red, green, or blue (RGB) color. Proteins, similarly, use letters to represent 20 unique amino acids, like the one below: \n","\n","> MKYATLLEYAFQALKNSYAPYSRFRVGAALLSDDGEVVTGCNVENASYGLSMCAERTAVFRAVAQGVKKFDAIAVVSGKVNPVYPCGACRQVLREFNPRLTVVVAGPGKKPLTTSLDKLLPKSFGKESLRRR\n","\n","Raw pixel RGB values are easy for computers to work with, though they are not very meaningful to the human eye, which is why they are displayed as images on the screen. Similarly, the sequence of amino acids is a compact, convenient representation of the actual molecule, while the more meaningful view of the protein molecule is its 3D structure. For an example, see [Cytidine deaminase](https://colab.research.google.com/drive/1O0_wyl3i-9F-5mDTlShaMfR2uOWHKwwE#scrollTo=Q277ab8R9WEU).\n"," \n","For you to appreciate and reason about the outputs, you want your models (GANs) to ultimately produce meaningful structures. There are two important common features that make images and proteins both suitable candidates for GANs:\n","\n","* A random combination of building blocks, whether amino acids or pixels, will not produce a realistic outcomes. This means the GAN cannot simply guess! There are meaningful, realistic patterns of pixels and amino acids that it must model and generate.\n","* The mathematical formula for how to evaluate the correctness of the generated item is unknown. For images, correctness is  \"realism\" -- how realistic does a generated image of a dog look? There's no math formula for that, so instead you have another model (the discriminator!) learn to assess that. The same goes for proteins.\n","\n","\n","|         | Image      | Protein  |\n","| ------- |:----------:| --------:|\n","| Data type | integers from 0 to 256 | vocab of 20 amino acids |\n","| Dimension| 2D | 1D|\n","| Number of possible variants | $3*256^{size}$ |  $20^{length}$  |\n","\n"," \n"]},{"cell_type":"markdown","metadata":{"id":"8huQi0yQ8qla"},"source":["### ProteinGAN\n"," \n","ProteinGAN is a generative adversarial network adapted to generate functional protein sequences. At its core, it consists of common building blocks: a discriminator and generator, spectral normalization (as in the [SN-GAN optional notebook](https://www.coursera.org/learn/build-basic-generative-adversarial-networks-gans/ungradedLab/c2FPs/optional-sn-gan)), and a loss function based on earth mover's distance (as in the [WGAN-GP assignment](https://www.coursera.org/learn/build-basic-generative-adversarial-networks-gans/programming/mTm3U/wgan)), etc. \n","\n","To make the GAN concept work in the field of synthetic biology, the generator and discriminator architectures have been modified to handle sequences of categorical values, capture long-distance relationships, as well as discriminate between various areas in the sequences. This is a major difference from pixel values in images and helps specifically with this type of long, categorical, and sequential data. One question to mull over: could this data processing and understanding help with generating text? \n","\n","\n","**Data pre-processing.** The explored protein space is very unevenly distributed. Some proteins and their close variants are widely studied while others are just recorded in public databases. Without the balancing, the neural network mainly focuses on big clusters of similar well-studied sequences while treating unrepresented cluster members as anomalies. ProteinGAN has in-built upsampling capability to balance the dataset based on the size of the cluster in order to preserve the diversity of sequences.\n","\n","**Discrete values.** One of the biggest differences between images and proteins is the data type: while images consist of continuous values, proteins are built from discrete building blocks. To address this challenge for backpropagation, ProteinGAN employs the [Gumbel-Softmax trick with temperature](https://arxiv.org/abs/1611.01144), which serves as a differentiable approximation to sampling discrete data. This allows to end-to-end training of the discriminator and generator while operating in discrete input space. \n","\n","**Convergence.** GANs are known to be difficult to train due to stability issues. The discrete nature of the input further aggravates this problem. Despite the implementation of spectral normalization and WGAN loss, the optimization of ProteinGAN did not lead to convergence. However, as demonstrated in [this paper](https://arxiv.org/abs/1801.04406), training with zero-centered gradient penalties leads to improved training and guarantees local convergence even if data and generator distributions are not continuous. Adapting the implementation of [non-saturating loss with R1 regularization](https://arxiv.org/abs/1801.04406) greatly improves the performance of the GAN as demonstrated in the figure below.\n","\n","\n","![Loss performance](https://drive.google.com/uc?export=view&id=1GBwiEm328DeLV29F7gUzUHP-o1uIYqSK)\n","\n","> *GAN performance in the first 35k steps using different losses. Model performances were measured using [BLOSUM45 scores](https://en.wikipedia.org/wiki/BLOSUM) (in the nutshell, similarity score which takes into account substitution probabilities of amino acids in known seuqences) against training sequences for the first 35,000 steps (average of 3 runs with different random seeds).*\n","\n","\n","For more information please refer [ProteinGAN paper](https://www.biorxiv.org/content/10.1101/789719v2) "]},{"cell_type":"markdown","metadata":{"id":"scLQLcKcIeSS"},"source":["## Setup"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ogtiZDjSjiOJ","outputId":"d82e19f1-b8cf-4333-93dc-52388fa44821","executionInfo":{"status":"ok","timestamp":1641318446833,"user_tz":300,"elapsed":20495,"user":{"displayName":"Jose Jhon Fredy Gonzalez Veloza","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06629063487883524661"}}},"source":["# Installing dependencies\n","! pip install biopython\n","! pip install py3Dmol\n","! apt-get install -y clustalo"],"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["Collecting biopython\n","  Downloading biopython-1.79-cp37-cp37m-manylinux_2_5_x86_64.manylinux1_x86_64.whl (2.3 MB)\n","\u001b[K     |████████████████████████████████| 2.3 MB 4.4 MB/s \n","\u001b[?25hRequirement already satisfied: numpy in /usr/local/lib/python3.7/dist-packages (from biopython) (1.19.5)\n","Installing collected packages: biopython\n","Successfully installed biopython-1.79\n","Collecting py3Dmol\n","  Downloading py3Dmol-1.7.0-py2.py3-none-any.whl (6.3 kB)\n","Installing collected packages: py3Dmol\n","Successfully installed py3Dmol-1.7.0\n","Reading package lists... Done\n","Building dependency tree       \n","Reading state information... Done\n","The following additional packages will be installed:\n","  libargtable2-0\n","The following NEW packages will be installed:\n","  clustalo libargtable2-0\n","0 upgraded, 2 newly installed, 0 to remove and 37 not upgraded.\n","Need to get 276 kB of archives.\n","After this operation, 683 kB of additional disk space will be used.\n","Get:1 http://archive.ubuntu.com/ubuntu bionic/universe amd64 libargtable2-0 amd64 13-1 [13.6 kB]\n","Get:2 http://archive.ubuntu.com/ubuntu bionic/universe amd64 clustalo amd64 1.2.4-1 [263 kB]\n","Fetched 276 kB in 2s (172 kB/s)\n","Selecting previously unselected package libargtable2-0.\n","(Reading database ... 155225 files and directories currently installed.)\n","Preparing to unpack .../libargtable2-0_13-1_amd64.deb ...\n","Unpacking libargtable2-0 (13-1) ...\n","Selecting previously unselected package clustalo.\n","Preparing to unpack .../clustalo_1.2.4-1_amd64.deb ...\n","Unpacking clustalo (1.2.4-1) ...\n","Setting up libargtable2-0 (13-1) ...\n","Setting up clustalo (1.2.4-1) ...\n","Processing triggers for man-db (2.8.3-2ubuntu0.1) ...\n","Processing triggers for libc-bin (2.27-3ubuntu1.3) ...\n","/sbin/ldconfig.real: /usr/local/lib/python3.7/dist-packages/ideep4py/lib/libmkldnn.so.0 is not a symbolic link\n","\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kEbt5Aq9YSyL","outputId":"e302d20b-5901-47ee-b3ec-d12ce94e7ad4","executionInfo":{"status":"ok","timestamp":1641318480015,"user_tz":300,"elapsed":21949,"user":{"displayName":"Jose Jhon Fredy Gonzalez Veloza","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06629063487883524661"}}},"source":["# Downloading pre-trained ProteinGAN model\n","!gdown https://drive.google.com/uc?id=1BfDNgn3Hj2khPfkbjE8azY_yj19igb_n\n","!unzip pre_trained_protein_gan.zip"],"execution_count":3,"outputs":[{"output_type":"stream","name":"stdout","text":["Downloading...\n","From: https://drive.google.com/uc?id=1BfDNgn3Hj2khPfkbjE8azY_yj19igb_n\n","To: /content/pre_trained_protein_gan.zip\n","100% 466M/466M [00:07<00:00, 58.7MB/s]\n","Archive:  pre_trained_protein_gan.zip\n","   creating: pre_trained_protein_gan/\n","  inflating: pre_trained_protein_gan/saved_model.pb  \n","  inflating: pre_trained_protein_gan/train_rep.fasta  \n","   creating: pre_trained_protein_gan/variables/\n","  inflating: pre_trained_protein_gan/variables/variables.data-00000-of-00001  \n","  inflating: pre_trained_protein_gan/variables/variables.index  \n"]}]},{"cell_type":"code","metadata":{"id":"7F9vYRgXV2uf","executionInfo":{"status":"ok","timestamp":1641318480019,"user_tz":300,"elapsed":15,"user":{"displayName":"Jose Jhon Fredy Gonzalez Veloza","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06629063487883524661"}}},"source":["# Helper methods\n","import shutil\n","\n","from Bio.Blast import NCBIWWW\n","from Bio.Blast import NCBIXML\n","\n","import numpy as np\n","import pandas as pd\n","\n","import py3Dmol\n","\n","# A mapping between amino acids ids and their corresponding letters\n","ID_TO_AMINO_ACID = {0: '0', 1: 'A', 2: 'C', 3: 'D', 4: 'E', 5: 'F', 6: 'G', 7: 'H', 8: 'I', 9: 'K', 10: 'L', 11: 'M', 12: 'N', 13: 'P', 14: 'Q', 15: 'R', 16: 'S', 17: 'T', 18: 'V', 19: 'W', 20: 'Y'}\n","\n","def to_seqs(model_output):\n","  \"\"\"Takes ProteinGAN output and returns list of generated protein sequences\"\"\"\n","  human_readable_seqs = []\n","  seqs = model_output[\"prediction\"]\n","  for i in range(len(seqs)):\n","    human_readable_seq =\"\".join([ID_TO_AMINO_ACID[a] for a in seqs[i].numpy()])\n","    human_readable_seq = human_readable_seq.replace(\"0\", \"\")\n","    human_readable_seqs.append(human_readable_seq)\n","  return human_readable_seqs\n","\n","def get_blast_results(seq):\n","  \"\"\"Takes a protein sequence, calls BLAST server and returns parsed results\"\"\"\n","  print(\"Calling BLAST server. This might take a while\")\n","  r = NCBIWWW.qblast(\"blastp\", \"nr\", seq, hitlist_size = 5, expect=0.5, \n","                     word_size=6, matrix_name=\"BLOSUM62\")\n","  blast_record = NCBIXML.read(r)\n","\n","  to_df = []\n","\n","  for a in blast_record.alignments:\n","    to_df.append({\"name\": a.hit_def,\"identity\": a.hsps[0].identities,\n","                  \"subject\": a.hsps[0].sbjct})\n","\n","  return pd.DataFrame(to_df)\n","\n","def append_to_fasta(path, seqs, prefix):\n","  \"\"\"Appends new sequences to existing file in FASTA format.\"\"\"\n","  fasta = \"\"\n","  for i, seq in enumerate(seqs):\n","    fasta += f\">{prefix}_{i}\\n{seq}\\n\"\n","  print(fasta, file=open(path, 'a'))\n","\n","def interpolate(starting, ending, steps):\n","  \"\"\"\n","  Interpolates between starting and end points. Steps parameter determines \n","  how many interpolated points will be returned.\n","  \"\"\"\n","  points = [starting]\n","  step = (ending-starting)/steps\n","  for i in range(steps):\n","    starting = starting + step\n","    points.append(starting)\n","  return np.asanyarray(points)"],"execution_count":4,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"Q277ab8R9WEU"},"source":["## Cytidine deaminase\n","This demonstration will use a relatively small protein called *cytidine deaminase* for simplicity. Its function in organisms is essential to DNA and RNA degradation. **Our aim is to be able to create variants of this protein that exhibit different properties.**\n"," \n","Below is an example of cytidine deaminase 3D structure.\n"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":532},"id":"J7EFUwbbWy9X","outputId":"eb4ab37a-fe29-4416-e739-c689da1a7c26","executionInfo":{"status":"ok","timestamp":1641318490473,"user_tz":300,"elapsed":854,"user":{"displayName":"Jose Jhon Fredy Gonzalez Veloza","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06629063487883524661"}}},"source":["view = py3Dmol.view(query='pdb:1UX1')\n","view.setStyle({'cartoon':{'color':'spectrum'}})\n","print(\"Cytidine deaminase\")\n","view"],"execution_count":5,"outputs":[{"output_type":"stream","name":"stdout","text":["Cytidine deaminase\n"]},{"output_type":"display_data","data":{"application/3dmoljs_load.v0":"<div id=\"3dmolviewer_16413184894569905\"  style=\"position: relative; width: 640px; height: 480px\">\n        <p id=\"3dmolwarning_16413184894569905\" style=\"background-color:#ffcccc;color:black\">You appear to be running in JupyterLab (or JavaScript failed to load for some other reason).  You need to install the 3dmol extension: <br>\n        <tt>jupyter labextension install jupyterlab_3dmol</tt></p>\n        </div>\n<script>\n\nvar loadScriptAsync = function(uri){\n  return new Promise((resolve, reject) => {\n    var tag = document.createElement('script');\n    tag.src = uri;\n    tag.async = true;\n    tag.onload = () => {\n      resolve();\n    };\n  var firstScriptTag = document.getElementsByTagName('script')[0];\n  firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\n});\n};\n\nif(typeof $3Dmolpromise === 'undefined') {\n$3Dmolpromise = null;\n  $3Dmolpromise = loadScriptAsync('https://3dmol.org/build/3Dmol.js');\n}\n\nvar viewer_16413184894569905 = null;\nvar warn = document.getElementById(\"3dmolwarning_16413184894569905\");\nif(warn) {\n    warn.parentNode.removeChild(warn);\n}\n$3Dmolpromise.then(function() {\nviewer_16413184894569905 = $3Dmol.createViewer($(\"#3dmolviewer_16413184894569905\"),{backgroundColor:\"white\"});\n$3Dmol.download(\"pdb:1UX1\", viewer_16413184894569905, {}, function() {\nviewer_16413184894569905.zoomTo();\n\tviewer_16413184894569905.setStyle({\"cartoon\": {\"color\": \"spectrum\"}});\nviewer_16413184894569905.render();\n})\n});\n</script>","text/html":["<div id=\"3dmolviewer_16413184894569905\"  style=\"position: relative; width: 640px; height: 480px\">\n","        <p id=\"3dmolwarning_16413184894569905\" style=\"background-color:#ffcccc;color:black\">You appear to be running in JupyterLab (or JavaScript failed to load for some other reason).  You need to install the 3dmol extension: <br>\n","        <tt>jupyter labextension install jupyterlab_3dmol</tt></p>\n","        </div>\n","<script>\n","\n","var loadScriptAsync = function(uri){\n","  return new Promise((resolve, reject) => {\n","    var tag = document.createElement('script');\n","    tag.src = uri;\n","    tag.async = true;\n","    tag.onload = () => {\n","      resolve();\n","    };\n","  var firstScriptTag = document.getElementsByTagName('script')[0];\n","  firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\n","});\n","};\n","\n","if(typeof $3Dmolpromise === 'undefined') {\n","$3Dmolpromise = null;\n","  $3Dmolpromise = loadScriptAsync('https://3dmol.org/build/3Dmol.js');\n","}\n","\n","var viewer_16413184894569905 = null;\n","var warn = document.getElementById(\"3dmolwarning_16413184894569905\");\n","if(warn) {\n","    warn.parentNode.removeChild(warn);\n","}\n","$3Dmolpromise.then(function() {\n","viewer_16413184894569905 = $3Dmol.createViewer($(\"#3dmolviewer_16413184894569905\"),{backgroundColor:\"white\"});\n","$3Dmol.download(\"pdb:1UX1\", viewer_16413184894569905, {}, function() {\n","viewer_16413184894569905.zoomTo();\n","\tviewer_16413184894569905.setStyle({\"cartoon\": {\"color\": \"spectrum\"}});\n","viewer_16413184894569905.render();\n","})\n","});\n","</script>"]},"metadata":{}},{"output_type":"execute_result","data":{"text/plain":["<py3Dmol.view at 0x7f59d4fb9790>"]},"metadata":{},"execution_count":5}]},{"cell_type":"markdown","metadata":{"id":"hy4cQXYSqe7X"},"source":["## Random amino acid sequence\n","\n","Let's consider a very naive approach first: choosing amino acids at random. As mentioned before, only a very tiny portion of amino acids can make up a protein with a desired function. So... what are the odds?\n"," \n","There are around 17k annotated sequences that are categorized as cytidine deaminase: [see here](https://www.uniprot.org/uniprot/?query=ec%3A3.5.4.5+taxonomy%3A%22Bacteria+%5B2%5D%22+length%3A%5B64+TO+256%5D&sort=score)\n"," \n","The protein length varies depending on the organism, but let's say you want to generate 131 length cytidine deaminase. So there are:  $20^{131}$ possible combinations (just for comparison: there are ~ $10^{80}$ atoms in the observable universe!) \n"," \n","It's safe to say that random sequences are unlikely to work. Even brute forcing all combinations is not an option. Nevertheless, let's try to generate a sequence to see what happens. :)\n"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"id":"5X5tLlgIucAR","outputId":"e105dcfc-3a9c-4cf5-f495-0a0cb2602bb9","executionInfo":{"status":"ok","timestamp":1641318517726,"user_tz":300,"elapsed":387,"user":{"displayName":"Jose Jhon Fredy Gonzalez Veloza","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06629063487883524661"}}},"source":["np.random.seed(42)\n","random_seq = \"\".join(np.random.choice(list(ID_TO_AMINO_ACID.values())[1:], 131))\n","random_seq"],"execution_count":6,"outputs":[{"output_type":"execute_result","data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["'HYRMIHWMMEIDCNGCANNTLSRRWNYDFWHKHVEQVKCYRHNIRDQTEVIECGLEVNCLEQSRIQISPVRPKRPAHKANIMWTIDDAFLHKHKINCASFDNIDADFRQDAFQHKRRLPWHTYEFHPRMEP'"]},"metadata":{},"execution_count":6}]},{"cell_type":"markdown","metadata":{"id":"iwpDnHa7vLCv"},"source":["Here, you see a 131 letter long amino acid sequence. It is hard to tell anything about this sequence only by looking. So instead, you can use a bioinformatics tool called Blast [(Basic Local Alignment Search Tool)](https://blast.ncbi.nlm.nih.gov/Blast.cgi) that searches a large database of known proteins to find the most similar matches. In most cases, a random sequence should not return any high-similarity results. \n","\n","If you do get anything returned, it should have a small _identity value_, which is the percentage of the sequence that matches. When the identity value is small, this means that only a small fragment of the sequence could be identified as a part of some random protein."]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":123},"id":"nBoKiboYvG73","outputId":"a4f75688-47f7-4baf-e4d2-9e0ec217051f","executionInfo":{"status":"ok","timestamp":1641318583625,"user_tz":300,"elapsed":63460,"user":{"displayName":"Jose Jhon Fredy Gonzalez Veloza","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06629063487883524661"}}},"source":["get_blast_results(random_seq)"],"execution_count":7,"outputs":[{"output_type":"stream","name":"stdout","text":["Calling BLAST server. This might take a while\n"]},{"output_type":"execute_result","data":{"text/html":["\n","  <div id=\"df-58215425-3f82-4017-a42e-2da17c7a38b6\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-58215425-3f82-4017-a42e-2da17c7a38b6')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-58215425-3f82-4017-a42e-2da17c7a38b6 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-58215425-3f82-4017-a42e-2da17c7a38b6');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["Empty DataFrame\n","Columns: []\n","Index: []"]},"metadata":{},"execution_count":7}]},{"cell_type":"markdown","metadata":{"id":"_P-wnHQYjvqZ"},"source":["## ProteinGAN sequences\n","\n","What if, instead, you train a GAN to generate desirable (realistic, reasonable, non-random) protein sequences? \n"]},{"cell_type":"code","metadata":{"id":"o6G2mA7vPVlc","executionInfo":{"status":"ok","timestamp":1641318633611,"user_tz":300,"elapsed":12738,"user":{"displayName":"Jose Jhon Fredy Gonzalez Veloza","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06629063487883524661"}}},"source":["import tensorflow as tf\n","tf.random.set_seed(42)\n","from absl import logging\n","logging.set_verbosity(\"ERROR\")\n","tf.get_logger().setLevel(\"ERROR\")\n","\n","# Loading pre-trained model.\n","model = tf.saved_model.load(\"pre_trained_protein_gan/\").signatures[\"serving_default\"]"],"execution_count":8,"outputs":[]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"id":"EbC5FmhhD1vI","outputId":"9b81f658-a67e-43fb-b4cd-2cad9e50b3ed","executionInfo":{"status":"ok","timestamp":1641318639645,"user_tz":300,"elapsed":6051,"user":{"displayName":"Jose Jhon Fredy Gonzalez Veloza","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06629063487883524661"}}},"source":["# Choosing random points from latent space.\n","noise = tf.random.truncated_normal([64, 128], stddev=0.5, dtype=tf.float32)\n","\n","# Feeding noise to generator to get an output.\n","model_output = model(noise)\n","\n","# Model returns indices of amino acids. Here we convert them to actual letters.\n","seqs = to_seqs(model_output)\n","seqs[0]"],"execution_count":9,"outputs":[{"output_type":"execute_result","data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["'MDCDNLIDAAIEVMENAHAPYSRFPVGAAIRTKSGNVYVGCNIENAAYPEGTCAEAGAIFAMVAAGERRIAEIAIIADTPGPVTPCGGCRQKLAEFCGKDVKVTMANLQGITLTMTMAELLPGAFSADDLE'"]},"metadata":{},"execution_count":9}]},{"cell_type":"markdown","metadata":{"id":"fk_9Nn7FxnG0"},"source":["Again, not much can be said about the sequence just by looking at it (unless you're a protein savant). Time to run BLAST again!"]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":224},"id":"TLjZJMXmpaZx","outputId":"1bfe993d-000c-4876-bf16-26bf85f6ef29","executionInfo":{"status":"ok","timestamp":1641318712937,"user_tz":300,"elapsed":63760,"user":{"displayName":"Jose Jhon Fredy Gonzalez Veloza","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06629063487883524661"}}},"source":["get_blast_results(seqs[0])"],"execution_count":10,"outputs":[{"output_type":"stream","name":"stdout","text":["Calling BLAST server. This might take a while\n"]},{"output_type":"execute_result","data":{"text/html":["\n","  <div id=\"df-691e6f2a-bb4e-4311-8dbb-582d75ec9f43\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>name</th>\n","      <th>identity</th>\n","      <th>subject</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>cytidine deaminase [Aliiroseovarius pelagivive...</td>\n","      <td>90</td>\n","      <td>SLLEAAKAVRENAHAPYSNFKVGAALRTSAGVVHVGCNVENIAYPE...</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>cytidine deaminase [Roseitranquillus sediminis...</td>\n","      <td>90</td>\n","      <td>SLIEAAREVRENAWVPYSRFKVGAAIRAASGRVYVGCNVENVAYPE...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>cytidine deaminase [Aliiroseovarius marinus]</td>\n","      <td>92</td>\n","      <td>SLLEAAKAVRENAHAPYSNFKVGAALRTSAGVVHVGCNVENIAYPE...</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>cytidine deaminase [Gemmobacter aquatilis] &gt;em...</td>\n","      <td>91</td>\n","      <td>LLDAATKVRENAYAPYSRFKVGAAIRTASGAVYSGCNVENVAYPEG...</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>MULTISPECIES: cytidine deaminase [Aliiroseovar...</td>\n","      <td>91</td>\n","      <td>SLLEAAKAVRENAHAPYSNFKVGAALRTSAGVVHVGCNVENIAYPE...</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-691e6f2a-bb4e-4311-8dbb-582d75ec9f43')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-691e6f2a-bb4e-4311-8dbb-582d75ec9f43 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-691e6f2a-bb4e-4311-8dbb-582d75ec9f43');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "],"text/plain":["                                                name  ...                                            subject\n","0  cytidine deaminase [Aliiroseovarius pelagivive...  ...  SLLEAAKAVRENAHAPYSNFKVGAALRTSAGVVHVGCNVENIAYPE...\n","1  cytidine deaminase [Roseitranquillus sediminis...  ...  SLIEAAREVRENAWVPYSRFKVGAAIRAASGRVYVGCNVENVAYPE...\n","2       cytidine deaminase [Aliiroseovarius marinus]  ...  SLLEAAKAVRENAHAPYSNFKVGAALRTSAGVVHVGCNVENIAYPE...\n","3  cytidine deaminase [Gemmobacter aquatilis] >em...  ...  LLDAATKVRENAYAPYSRFKVGAAIRTASGAVYSGCNVENVAYPEG...\n","4  MULTISPECIES: cytidine deaminase [Aliiroseovar...  ...  SLLEAAKAVRENAHAPYSNFKVGAALRTSAGVVHVGCNVENIAYPE...\n","\n","[5 rows x 3 columns]"]},"metadata":{},"execution_count":10}]},{"cell_type":"markdown","metadata":{"id":"fUKadK0Vx05y"},"source":["Nice! This time, you got some matches that are either cytidine deaminase or other types of deaminase with a high indentity. This is a good indication that the GAN works well in generating realistic protein sequences."]},{"cell_type":"markdown","metadata":{"id":"JpAlWkRgvSJs"},"source":["## Latent space\n","\n","As you already know, GANs learn to map points in the latent space to generated items. You can explore this latent space and perform a meaningful modifications to a generated item by moving in different directions. On generated faces, that might be changing hair color or adding sunglasses. Here, it's also to change something semantically meaningful, but for protein sequences.\n","\n","To start off, you can play with the diversity of generated sequences by changing how widely you sample the latent space. This can be achieved by modifying the standard deviation of the distribution. Let's try 0.1 and 1.0 to start!"]},{"cell_type":"code","metadata":{"id":"Ls7MUljzvRwG","executionInfo":{"status":"ok","timestamp":1641318732654,"user_tz":300,"elapsed":7422,"user":{"displayName":"Jose Jhon Fredy Gonzalez Veloza","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06629063487883524661"}}},"source":["# Generating sequences from points which are close to each other\n","model_output = model(tf.random.truncated_normal([64, 128], stddev=0.1, dtype=tf.float32))\n","small_var_seqs = to_seqs(model_output)\n","\n","# Generating sequences more distrbuted points\n","model_output = model(tf.random.truncated_normal([64, 128], stddev=1.0, dtype=tf.float32))\n","large_var_seqs = to_seqs(model_output)"],"execution_count":11,"outputs":[]},{"cell_type":"code","metadata":{"id":"J-Ns4dAgRYXh","executionInfo":{"status":"ok","timestamp":1641318739748,"user_tz":300,"elapsed":1149,"user":{"displayName":"Jose Jhon Fredy Gonzalez Veloza","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06629063487883524661"}}},"source":["# Creating fasta files which will be used for clustalo to calculate distances\n","#pre_trained_protein_gan/train_rep.fasta - contains some representative sequences of training dataset\n","shutil.copy(\"pre_trained_protein_gan/train_rep.fasta\",\"sequences.fasta\")\n","#Appending generated sequences to training sequences\n","append_to_fasta(\"sequences.fasta\", small_var_seqs, \"small_var\")\n","append_to_fasta(\"sequences.fasta\", large_var_seqs, \"large_var\")"],"execution_count":12,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"xiykPRgYh4OC"},"source":["[Clustalo](http://www.clustal.org/omega/) is a bioinformatics tool for biological sequence alignment and comparison that calculates the edit distances between multiple strings, taking into account that some letters are more similar than others biologically. You can use it to calculate all-to-all distances from different protein sequence sets - training representatives, sequences generated using low and high standard deviation."]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7D-4DqB_FcV1","outputId":"97069a20-8ad2-4509-eac0-38ce13a4059f","executionInfo":{"status":"ok","timestamp":1641318769375,"user_tz":300,"elapsed":23699,"user":{"displayName":"Jose Jhon Fredy Gonzalez Veloza","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06629063487883524661"}}},"source":["! clustalo -i sequences.fasta -o fasta.aln --threads=2 -v --full --distmat-out=dist_out.dist --force"],"execution_count":13,"outputs":[{"output_type":"stream","name":"stdout","text":["Using 2 threads\n","Read 484 sequences (type: Protein) from sequences.fasta\n","Calculating pairwise ktuple-distances...\n","Pairwise distance matrix written to dist_out.dist\n","Ktuple-distance calculation progress done. CPU time: 7.08u 0.01s 00:00:07.09 Elapsed: 00:00:04\n","Guide-tree computation done.\n","Progressive alignment progress done. CPU time: 33.90u 0.82s 00:00:34.72 Elapsed: 00:00:19\n","Alignment written to fasta.aln\n"]}]},{"cell_type":"code","metadata":{"id":"NIm7_vnPcKe4","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1641318818393,"user_tz":300,"elapsed":5222,"user":{"displayName":"Jose Jhon Fredy Gonzalez Veloza","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06629063487883524661"}},"outputId":"0b1b8825-6fe2-434f-c461-8468339e1f35"},"source":["from sklearn.manifold import TSNE\n","\n","#Loading calculated distances\n","distance_matrix = pd.read_csv(\"dist_out.dist\", delimiter='\\s+', skiprows=[0],header=None,index_col=0)\n","distance_matrix.columns = distance_matrix.index.values\n","\n","#Using TSNE to compress all pair wise distances between sequences into two components which then could be plotted.\n","tsne = TSNE(n_components=2, metric='precomputed')\n","coordinates_2d = tsne.fit_transform(distance_matrix.values)"],"execution_count":14,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/sklearn/manifold/_t_sne.py:783: FutureWarning: The default initialization in TSNE will change from 'random' to 'pca' in 1.2.\n","  FutureWarning,\n","/usr/local/lib/python3.7/dist-packages/sklearn/manifold/_t_sne.py:793: FutureWarning: The default learning rate in TSNE will change from 200.0 to 'auto' in 1.2.\n","  FutureWarning,\n","/usr/local/lib/python3.7/dist-packages/sklearn/manifold/_t_sne.py:827: FutureWarning: 'square_distances' has been introduced in 0.24 to help phase out legacy squaring behavior. The 'legacy' setting will be removed in 1.1 (renaming of 0.26), and the default setting will be changed to True. In 1.3, 'square_distances' will be removed altogether, and distances will be squared by default. Set 'square_distances'=True to silence this warning.\n","  FutureWarning,\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":483},"id":"a9gIgVbNJrBW","outputId":"33b3107c-23c7-4948-d19f-ccb3ccc6ad27","executionInfo":{"status":"ok","timestamp":1641318823228,"user_tz":300,"elapsed":1261,"user":{"displayName":"Jose Jhon Fredy Gonzalez Veloza","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06629063487883524661"}}},"source":["from matplotlib import pyplot as plt\n","\n","\n","# Plotting train representatives and generated sequences with different diversity\n","plt.figure(figsize=(12, 8))\n","plt.scatter(coordinates_2d[:-128,0], coordinates_2d[:-128,1], c=\"green\", label=\"Train representative sequences\", alpha=0.5, s=30)\n","small_var_el = distance_matrix.index.str.contains(\"small_var\")\n","plt.scatter(coordinates_2d[small_var_el,0], coordinates_2d[small_var_el,1], c=\"orange\", label=\"Generated sequences with 0.1 standard deviation\")\n","large_var_el = distance_matrix.index.str.contains(\"large_var\")\n","plt.scatter(coordinates_2d[large_var_el,0], coordinates_2d[large_var_el,1], c=\"red\", label=\"Generated sequences with 1.0 standard deviation \")\n","plt.legend()\n","plt.show()"],"execution_count":15,"outputs":[{"output_type":"display_data","data":{"image/png":"iVBORw0KGgoAAAANSUhEUgAAAscAAAHSCAYAAAAABWabAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4yLjIsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy+WH4yJAAAgAElEQVR4nOzde2xc55km+OeQLNaFoopVkmjJbLEkk9bFIZVpmGs73WaytrWJ0rA7aXO31VlhEAxWIwy6B1YDaWB7hgv3QLvEDraRhdTA7gRq9fR4AebSAD1IzLGZWSmaFr0exaY6LYuWRIuiXFQYXl2s4qVYRYo8+0ex6GKpbuec79yfHxAoPJaqPlady3ve837vJ8myDCIiIiIiAqrMHgARERERkVUwOCYiIiIi2sTgmIiIiIhoE4NjIiIiIqJNDI6JiIiIiDYxOCYiIiIi2lRj9gBy7d69Wz5w4IDZwyAiIiIih7tx48acLMt78rdbKjg+cOAAhoaGzB4GERERETmcJEnRQttZVkFEREREtInBMRERERHRJgbHRERERESbGBwTEREREW1icExEREREtInBMRERERHRJgbHRERERESbGBwTEREREW1icExEREREtInBMRERERHRJgbHRERERESbGBwTEREREW1icExEREREtInBMRERERHRJgbHRERERESbasweABGR0RKpBAajgxidH0VrqBWdkU4EfUGzh0VERBbA4JiIXCWRSuDctXOIJWOo99bj5tRNXI1exZtffZMBMhERsayCiNxlMDqIWDKGSEMEYX8YkYYIYskYBqODZg+NiIgsgMExEbnK6Pwo6r3127bVe+txf/6+SSMiIiIrYXBMRK7SGmrFYnpx27bF9CJaQi0mjYiIiKyEwTERuUpnpBPhQBjReBSxlRii8SjCgTA6I51mD42IiCyAwTERuUrQF8SbX30TXUe70BJqQdfRLk7GIyLK19sLHDgAVFVl/uztNXtEhmG3CiJynaAviFcPv2r2MIiIrKm3FzhzBkgmMz9Ho5mfAeDUKfPGZRBmjomIiIjoC93dXwTGWclkZrsLMHNMREREZFO6LGo0Pq5su8MwOCYiIiKyId0WNWpuzpRSFNruAiyrICIiIrIh3RY16ukBAoHt2wKBzHYXYHBMREREZBSBXSB0W9To1Cng4kUgEgEk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\n","text/plain":["<Figure size 864x576 with 1 Axes>"]},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","metadata":{"id":"nSFhBtY3NhQR"},"source":["As expected, oranges sequences are more similar to each other than the red ones. "]},{"cell_type":"markdown","metadata":{"id":"Y62ZHV1SUqYA"},"source":["### Controlling biological properties\n","\n","After generating realistic sequences, you want to be able to control their properties. As with images, it's possible to find a direction in the latent space that will change a specific property of the generated outcome. Here, you can vary values of the 100th dimension and measure the molecular weight of generated sequences. You'll use the [biopython](https://biopython.org/) library to calculate the molecule's weight. "]},{"cell_type":"code","metadata":{"id":"i3osQT59e-JT","executionInfo":{"status":"ok","timestamp":1641318907766,"user_tz":300,"elapsed":56921,"user":{"displayName":"Jose Jhon Fredy Gonzalez Veloza","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06629063487883524661"}}},"source":["from scipy.stats import pearsonr\n","from Bio.SeqUtils.ProtParam import ProteinAnalysis\n","\n","# Changing the values of 100th dimension from -1.0 to 1.0\n","d = 99 \n","starting = np.zeros([128])\n","starting[d] = -1.0\n","ending = np.zeros([128])\n","ending[d] = 1.0\n","points = interpolate(starting, ending, 1023)\n","\n","seqs = []\n","for i in range(0, 1024, 64):\n","  model_output = model(tf.constant(points[i:i+64], tf.float32))\n","  seqs.extend(to_seqs(model_output))"],"execution_count":16,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"dNvRNj2vVTFh"},"source":["Then, you can calculate the molecular weight of each sequence and calculate the correlation with latent space direction."]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"mmxAP-WwUZ8q","outputId":"fe34bfc7-464a-42ee-f923-7d0b8d18458b","executionInfo":{"status":"ok","timestamp":1641318973307,"user_tz":300,"elapsed":503,"user":{"displayName":"Jose Jhon Fredy Gonzalez Veloza","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06629063487883524661"}}},"source":["w = [ProteinAnalysis(s).molecular_weight() for s in seqs] \n","pearsonr(w, points[:,d])"],"execution_count":18,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(0.8323566036491581, 3.4371324629924284e-264)"]},"metadata":{},"execution_count":18}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/","height":502},"id":"JHeiy1y9hFfp","outputId":"33df3014-e898-4544-e3eb-d66e4c69945c","executionInfo":{"status":"ok","timestamp":1641318975617,"user_tz":300,"elapsed":796,"user":{"displayName":"Jose Jhon Fredy Gonzalez Veloza","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"06629063487883524661"}}},"source":["plt.figure(figsize=(16, 8))\n","plt.scatter(points[:,d], w, c = 'b', s = 20, label = 'Molecule weight')\n","plt.xlabel(\"Latent dimension value\", fontsize = 15)\n","plt.ylabel(\"Molecular weight\", fontsize = 15)\n","plt.legend(fontsize = 14)\n","plt.grid(True)\n","plt.show()"],"execution_count":19,"outputs":[{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 1152x576 with 1 Axes>"]},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","metadata":{"id":"937OnQVxVjKh"},"source":["Of course, this is a very simplistic example; it is a good illustrative example of how latent space can be explored.\n","\n","\n","## Summary\n","\n","In summary, you have learned about:\n","\n","* Proteins as non-random sequences of 20 amino acids (aa) that nature has tweaked over billions of years of evolution to drive essential life processes;\n","\n","*  ProteinGAN and its technical features outlining the challenges of learning long-biological sequences such as proteins;\n","\n","* Generating random protein sequences from a family of cytidine deaminases using a generator from a pre-trained ProteinGAN model;\n","\n","* Visualizing biological sequences using sequence alignments and dimensionality reduction;\n","\n","* Exploring latent space dimensions and connecting it with physicochemical properties of generated proteins.\n","\n"]},{"cell_type":"markdown","metadata":{"id":"_kH5E53bgFGC"},"source":["## Author's Contribution\n","\n","[Donatas Repečka](https://www.linkedin.com/in/donatasrep/) (Biomatter Designs) was responsible for the notebook's content and design; \n","\n","[Aleksej Zelezniak](https://twitter.com/AZelezniak)  (Zelezniak lab at Chalmers University of Technology) gave input into summarizing and editing the text.\n","\n","## Acknowledgment\n","The authors would like to thank [Biomatter Designs](https://www.biomatterdesigns.com/) and [DeepLearning.AI](https://www.deeplearning.ai/) teams for their comments and insightful suggestions:\n","\n","* [Vykintas Jauniškis](https://www.linkedin.com/in/vykintas-jauniskis/) (Biomatter Designs);\n","* [Laurynas Karpus](https://www.linkedin.com/in/laurynaskarpus/) (Biomatter Designs);\n","* [Audrius Laurynėnas](https://www.linkedin.com/in/audrius-lauryn%C4%97nas-307687b2/) (Biomatter Designs);\n","* [Aurimas Repečka](https://www.linkedin.com/in/aurimas-repe%C4%8Dka-23064ab2/) (Biomatter Designs);\n","* [Irmantas Rokaitis](https://www.linkedin.com/in/irmantas-rokaitis-52336b18b/) (Biomatter Designs);\n","* [Audronė Valančiūtė](https://www.linkedin.com/in/audron%C4%97-valan%C4%8Di%C5%ABt%C4%97-730785158/) (Biomatter Designs);\n","* [Antanas Žilakauskis](https://www.linkedin.com/in/zilakauskis95/) (Biomatter Designs).\n"]}]}